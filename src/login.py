# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5 import QtWidgets
from UI.login_ui import Ui_login
from src.mainwindow import MainWindow
import sys
from src.db_config import db_connect


def login_fuc(property_id, password):
    conn = db_connect()
    cursor = conn.cursor()
    # 使用参数化查询，防止 SQL 注入攻击
    sql = 'SELECT property_id, position,pass_word FROM property_staff WHERE property_id = %s;'
    cursor.execute(sql, (property_id,))
    res = cursor.fetchone()
    if res:
        stored_property_id, position, stored_password = res
        if password == stored_password:
            # 验证成功
            print("登录成功")
            cursor.close()
            conn.close()
            return True
            # 执行登录成功后的操作
        else:
            # 密码错误
            print("密码错误")
            cursor.close()
            conn.close()
            return False
            # 执行登录失败后的操作
    else:
        # 用户不存在
        print("用户不存在")
        cursor.close()
        conn.close()
        return False
        # 执行登录失败后的操作


def sig_up_fuc(staff_id, pd):
    conn = db_connect()
    cursor = conn.cursor()
    sql = '''INSERT INTO property_staff (property_id, position, staff_name, pass_word) VALUES (%s, %s, %s, %s)'''
    values = (staff_id, '管理员', 'property_name', pd)  # 根据实际情况设置 position_value 和 property_name_value 的值
    select = '''SELECT property_id FROM property_staff WHERE property_id = %s'''
    cursor.execute(select, (staff_id,))
    res = cursor.fetchone()
    if res:
        print("用户已存在")
        cursor.close()
        conn.close()
        return False
    else:
        cursor.execute(sql, values)
        conn.commit()
        conn.close()


class login_wid(QtWidgets.QWidget):
    def __init__(self):
        super().__init__()
        self.ui = Ui_login()
        self.ui.setupUi(self)
        self.ui.login_btn.clicked.connect(self.login_clicked)
        self.ui.sig_up_btn.clicked.connect(self.sig_up_clicked)
        self.win = None

    def login_clicked(self):
        property_id = self.ui.id_editor.text()
        password = self.ui.password_editor.text()
        print(property_id)
        print(password)
        if login_fuc(password=password, property_id=property_id):
            self.win = MainWindow()
            self.win.show()
            self.close()

    def sig_up_clicked(self):
        property_id = self.ui.id_editor.text()
        password = self.ui.password_editor.text()
        sig_up_fuc(staff_id=property_id, pd=password)


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    login_window = login_wid()
    login_window.show()
    sys.exit(app.exec_())
